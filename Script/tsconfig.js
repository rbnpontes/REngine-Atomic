const path = require('path');
const fs = require('fs-extra');
const { globSync } = require('glob');

module.exports = (params)=> {
    const { constants, artifacts_root } = params;
    const typescript_generated_types_path = path.resolve(artifacts_root, 'Build/TypeScript');

    const base_ts_config = {
        compilerOptions : {
            target: 'es5',
            outDir: '',
            module: 'commonjs',
            declaration: false,
            noImplicitAny: false,
            noLib: false,
            moduleResolution: 'classic',
            sourceMap: true,
            experimentalDecorators: true,
            forceConsistentCasingInFileNames: true
        },
        atom: {
            rewriteTsconfig: true
        },
        files_glob: [],
        files: []
    };

    const files_glob = [
        './ToolCore/**/*.ts',
        `./${constants.engine_editor_name}/**/*.ts`,
        './TypeScript/**/*.ts',
        '!./TypeScript/dist/*.ts',
        `!./TypeScript/${constants.engine_net_name}.d.ts`,
        path.join(typescript_generated_types_path, '*.ts'),
        ...base_ts_config.files_glob ?? [],
    ];

    // Collect Editor Code files and ToolCore Code files
    const editor_code_files = globSync([
        '{', [constants.engine_editor_name+'/**/*.ts', 'ToolCore/**/*.ts'].join(',') ,'}'
    ].join(''), { cwd : __dirname }).map(x => './'+x);
    // Do the same but for ./TypeScript type definitions
    const ts_definition_files = fs.readdirSync(path.join(__dirname, 'TypeScript'))
        .map(x => './TypeScript/'+x)
        .filter(x => fs.statSync(path.resolve(__dirname, x)).isFile() && x.endsWith('.ts'));
    // Acquire definitions file that has been generated by the Engine Tool.
    const generated_d_files = fs.readdirSync(typescript_generated_types_path)
        .map(x => path.resolve(typescript_generated_types_path, x))
        .filter(x => fs.statSync(x).isFile() && x.endsWith('.ts'));
    
    base_ts_config.files_glob = files_glob;
    base_ts_config.files = [
        ...editor_code_files,
        ...ts_definition_files,
        ...generated_d_files,
        ...base_ts_config.files
    ];
    base_ts_config.compilerOptions.outDir = path.resolve(artifacts_root, 'Build/Resources/EditorData');

    return base_ts_config;
};