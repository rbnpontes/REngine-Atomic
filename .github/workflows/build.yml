on:
  workflow_call:
    inputs:
      runs_on:
        required: true
        type: string
      publish_artifact:
        type: boolean
        default: false
      artifact_name:
        type: string
        default: ''
jobs:
  build_job:
    runs-on: ${{ inputs.runs_on }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          lfs: true
      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
         vulkan-query-version: 1.3.204.0
         vulkan-components: Vulkan-Headers, Vulkan-Loader
         vulkan-use-cache: true
      - uses: lukka/get-cmake@latest  
        name: Install CMake
        with:
          cmakeVersion: "3.27.6"
          useLocalCache: false
          useCloudCache: false 
      - uses: actions/setup-node@v4.0.0
        name: Install NodeJS
        with:
          node-version: 18
      - uses: actions/cache@v4
        with: 
          path: |
            '${{ env.GITHUB_WORKFLOW }}/${{ env.GITHUB_REPOSITORY }}/Artifacts/CEF'
          key: ${{ runner.os }}-${{ hashFiles('**/cef_bin_info.json') }}
      - run: npm i yarn -g
        name: Install Yarn
      - name: Install Project Dependencies
        run: |
          cd Build
          yarn
      - if: inputs.runs_on == 'ubuntu-latest'
        name: Install Additional Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install libgtk-3-dev libgl1-mesa-dev libglu1-mesa-dev
      - if: inputs.runs_on == 'macos-latest'
        name: Install Additional MacOS Dependencies
        run: |
          brew install p7zip
      # Generate CMake Project
      - name: Generate Project
        run: yarn --cwd Build editor:gen
      # Execute First Build. This is required because CMake
      # requires some tools to exist before build second phase
      - name: Build First Phase
        run: yarn --cwd Build editor:firstphase
      # Finally. Execute Second Phase, this phase
      # creates our editor executable
      - name: Build Second Phase
        run: yarn --cwd Build editor:secondphase
      # If publish_artifact is enabled, then the above
      # steps will be run
      # Copying binaries is required to place all Tools, Native Libs
      # and resources into editor directory
      - if: inputs.publish_artifact
        name: Copying Binaries
        run: yarn --cwd Build editor:cpybins
      # After copy binaries, we must generate our .zip
      # and upload into github artifacts
      - if: inputs.publish_artifact
        name: Building Artifacts
        run: yarn --cwd Build editor:pkg
      # Publish artifact
      - if: inputs.publish_artifact && inputs.artifact_name != ''
        name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ github.workspace }}/${{ github.repository }}/Artifacts/${{ inputs.artifact_name }}
